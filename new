print("Hello World!!!")
print("你好世界!")


print(65)
print(13.2)
print("你好")


# 单行注释

"""
    多行
    注释
    。
"""


money = 66 ** 6
print("钱包还有: ",money)
# 买了一个鼠脖，money-9999999999
print("钱包还有: ",money-9999999999,"元")


# 方法一:使用print直接输出类型信息
print(type("你好"))
print(type(123))
print(type(10.2))
# 方式二:使用变量存储type()语句的结果
n = type(123)
print(n)
# 方式三:使用type()语句,查看变量中存储的数据类型信息
n = 10
print(type(n))


num_str = str(11)
print(type(num_str),num_str)

float_str = str(11.345)
print(type(float_str),float_str)

n1 = int("11")
print(type(n1),n1)

n2 = float("12.456")
print(type(n2),n2)

# error
# n3 = int("10.223")
# print(type(n3),n3)

# error
# n4 = int("ab")
# print(type(n4),n4)

n5 = int(120.913)
print(type(n5),n5)
n5 = float(n5)
print(type(n5),n5)


print("2 + 3 = ",2 + 3)
print("9 - 5 = ",9 - 5)
print("2 * 3 = ",2 * 3)
print("2 / 3 = ",2 / 3)
print("7 / 3 = ",7 / 3)
print("6 / 3 = ",6 / 3)
print("8 // 3 = ",8 // 3)
print("2 ** 3 = ",2 ** 3)


n = 5
print("n = ",n)
n += 3
print("n += 3: ",n)
n -= 4
print("n -= 4: ",n)
n //= 3
print("n //= 3: ",n)
n *= 5
print("n *= 5: ",n)
n **= 2
print("n **= 2: ",n)
n /= 3
print("n /= 3: ",n)


s1 = '你好'
print(type(s1),'\'你好\'')
s2 = "你好"
print(type(s2),"\"你好\"")
s3 = """
你
好
"""
print(type(s3),"\"\"\"\n\
你\n\
好\n\
\"\"\"")


s1 = '"a","b",\'c\\d'
print(s1)
s2 = "'a',\"b\",\\c\""
print(s2)


print("今天"+"是"+'星期二')
print("今天","是","星期二")


# TypeError: can only concatenate str (not "int") to str
print("age :" + 100)


s1 = "人在天涯鬓已斑。"
s2 = "江南几度梅花发,%s" %s1
print(s2)


s1 = "羌笛"
s2 = "杨柳"
s3 = "玉门关"
s4 = "%s何须怨%s春风不度%s" % (s1,s2,s3)
print(s4)


print("重拾旧山河,%s" % "朝天阙")

print("name:%s age:%d money:%f" % ("fm",19,666666.666))


n = 5
m = 7
f = 6.6
print("""n\
 =%4d
m =%-5d'a'
f =%6.3f\
""" % (n,m,f))

#精度限制的同时也会进行四舍五入
n1 = 5.5
print("1)",n1)
print("n1 = %.0f\n" % n1)

n1 = 5.55
print("2)",n1)
print("n1 = %.0f" % n1)
print("n1 = %.1f\n" % n1)

n1 = 5.56
print(n1)
print("n1 = %.0f" % n1)
print("n1 = %.1f\n" % n1)

n1 = 5.555
print("3)",n1)
print("n1 = %.0f" % n1)
print("n1 = %.1f" % n1)
print("n1 = %.2f\n" % n1)


name = "guojiao"
birth = 1973
alcohol_content = 66.696
print(f"名字:{name}\n成立于:{birth}\n酒精度数:{alcohol_content}")


print("2 * 3 = %d" % (2 * 3))
print(f"8 ** 2 = {8 ** 2}")
print("type(str) = %s" % type("23"))

print("2 * 3 = %d" % 6)
print(f"8 ** 2 = {64}")
print("type(str) = %s" % "<class 'str'>")


s1 = input("输入今天的日期:")
print(f"今天是:{s1}")


n1 = int(input("输入一个整形number:"))
print(f"The number is: {n1}")


result = 9 > 5
print(f"9 > 5 的结果是: {result},类型是:{type(result)}")
result = "haha" == "haa"
print(f"字符串haha与haa是否相等,结果是: {result},类型是: {type(result)}")


b1 = True
b2 = False
print(f"b1 的内容是: {b1},类型是: {type(b1)}")
print(f"b2 的内容是: {b2},类型是: {type(b1)}")


n = int(float(input("input num:")))
if n > 100 :
    print('num > 100')
else :
    print("num < 100")
print("num is",n)


import random
n = random.randint(1,100)
count = 0
flag = True
while flag :
    k = int(input("猜数字(1..100):"))
    count += 1
    if k == n :
        print("yes")
        flag = False
    elif k > n :
        print("大了")
    elif k < n :
        print("小了")
print("count:",count)


print("Hello ",end = '')
print("World!",end = '\n\n')

print("abc def")
print("abcde fgh\n")

print("abc\tdef")
print("abcde\tfgh\n")


i = 1
while i <= 9 :
    k = 1
    while k <= i :
        print(f"{k}*{i}={k*i}\t",end = '')
        #print("%d*%d=%-3d" % (k,i,k*i),end = '')
        k += 1
    i += 1
    print()
    #print("\n",end = '')


s = "abcde"
for i in s :
    print(i)


s = "Most of us compare ourselves with anyone we think is happier"
count = 0
for i in s :
    if i == 'o' :
        count += 1
print("count = ",count)


for i in range(5) :
    print(i,end = ' ')

for i in range(5,10,2) :
    print(i,end = ' ')

for i in range(3):
    print("ahhah")

# python --- ok    C --- error
for i in range(5):
    print(i,end = ' ')
print("")
print(i)


for i in range(1,10):
    for k in range(1,i + 1):
        print("%d*%d=%-3d" % (k,i,k*i),end = '')
    print()


for i in range(4):
    print("i =",i  )
    print("a")
    if i > 1:
        continue
    print("b")


for i in range(10):
    if i > 5:
        continue
    print("i =",i)

for i in range(10):
    print("i =",i)
    if i > 5:
        break


#continue 与 break 只对所在的循环生效(不会对所在循环的外层循环生效)    这里 C 与 python 是一样的
for i in "abc":
    for k in range(2):
        if i == 'b':
            break
        print(i)


import random
count = 0
while count < 10:
    n = random.randint(1,100)
    if n < 10:
        print(n,end = ' ')
        count += 1

******************************************************************************
def my_hello():
    print("Hello World!")

my_hello()

------------------------------------------

def my_len(s):
    str(s)
    count = 0
    for i in s:
        count += 1
    print("len =",count)

s1 = 'abcdef'
my_len(s1)
my_len(input("input:"))

------------------------------------------

def my_add(n1,n2):
    print(f"{n1} + {n2} = {n1 + n2}")

my_add(4,9)

------------------------------------------

def fun1():
    print("a ",end = '')

def fun2():
    return 

def fun3():
    return None

print(fun1(),type(fun1()),type(fun1))
print(fun2(),type(fun2()),type(fun2))
print(fun3(),type(fun3()),type(fun3))

------------------------------------------

def func_b():
    print("b")

def func_a():
    print("a")
    func_b()
    print("c",end = '')

func_a()

------------------------------------------

num = 35

def fun_a():
    print(num)

def fun_b():
    num = 7
    print(num)

fun_a()
fun_b()
print(num)

------------------------------------------

num = 7
def fun_A():
    global num 
    num = 50

print(num)
fun_A()
print(num)

******************************************************************************

list1 = ["a1","b2","c3","d4"]
print(list1,"\t",type(list1))
list2 = ["abc",123,12.33,True]
print(list2,"\t",type(list2))

------------------------------------------

my_list = [[1,2,3],[4,5,6]]
print(my_list,"\n",type(my_list))

------------------------------------------

name_list = ["Tom","Lily","Rose"]
print(name_list[0])
print(name_list[1])
print(name_list[2])

------------------------------------------

name_list = ["Tom","Lily","Rose"]
print(name_list[-1])
print(name_list[-2])
print(name_list[-3])

------------------------------------------

list1 = [["a","b"],["c","d"]]
print(list1[0][0],list1[0][1])
print(list1[1][0],list1[1][1])

------------------------------------------

mylist = ["a1","b2","c3","d4"]
index = mylist.index("c3")
print("c3在列表中的下标索引值是:%d" % (index))

------------------------------------------

mylist = ["a1","b2","c3","d4"]
print(mylist)
mylist[0] = "e5"
mylist[1] = "f6"
print("列表被修改元素值后,结果为:%s" % (mylist))

------------------------------------------

mylist = ["a1","b2","c3"]
print(mylist)
mylist.insert(1,"abcd")
print("列表插入元素后结果是:%s" % (mylist))

------------------------------------------

mylist = ["1","2","3"]
print(mylist)
mylist.append("6")
mylist.append(6)
print("列表在追加了元素后结果是:%s" % (mylist))
print(f"type(mylist[-1]):{type(mylist[-1])}\n\
type(mylist[-2]):{type(mylist[-2])}")

------------------------------------------

mylist = ["a1","b2","c3"]
mylist2 = ["d4","e5","f6"]
print(mylist)
mylist.extend(mylist2)
print(f"列表追加了一个新的列表后,结果是:{mylist}")

------------------------------------------

mylist = ['a1', 'b2', 'c3', 'd4']
print(mylist)
del mylist[3]
print(f"列表删除元素后,结果是:{mylist}")

------------------------------------------

mylist = ['a1', 'b2', 'c3']
print(mylist)
element = mylist.pop(1)
print(f"通过pop方法取出元素后列表内容:{mylist},取出的元素是:{element}")

------------------------------------------

mylist = ['a1', 'b2', 'a1', 'b2', 'c3']
print(mylist)
mylist.remove("b2")
print(f"通过remove方法移除元素后,列表内容:{mylist}")

------------------------------------------

mylist = ['a1', 'b2', 'a1', 'b2', 'c3']
print(mylist)
mylist.clear()
print(f"列表被清空了,结果是:{mylist}")

------------------------------------------

mylist = ['a1','b2','a1','b2','a1','c3']
count = mylist.count("a1")
print(f"列表中a1的数量是:{count}")

------------------------------------------

mylist = ['a1','b2','c3']
count = len(mylist)
print(f"列表的元素数量总共有:{count}个")

------------------------------------------

mylist = [22,25,21,23,22,20]
print(mylist)
mylist.append(31)
print(mylist)
mylist.extend([29,33,30])
print(mylist)
print(mylist[0],mylist[-1])
print(mylist.index(31))

------------------------------------------

def list_while_func (mylist):
    index = 0
    while index < len(mylist):
        print(mylist[index],end = ' ')
        index += 1
    print()

def list_for1_func (mylist):
    for index in range(0,len(mylist)):
        print(mylist[index],end = ' ')
    print()

def list_for2_func(mylist):
    for i in mylist:
        print(i,end = ' ')
    print()

my_list = [0,1,2,3,4,5,6,7,8,9]
list_while_func(my_list)
list_for1_func(my_list)
list_for2_func(my_list)

------------------------------------------

def list_even_while_func (list1):
    i = 0
    list2 = []
    while i < len(list1):
        if list1[i] % 2 == 0:
            list2.append(list1[i])
        i += 1
    print(list2)


def list_even_for_func (list1):
    list2 = []
    for i in list1:
        if i % 2 == 0:
            list2.append(i)
    print(list2)


list1 = [1,2,3,4,5,6,7,8,9,10]
list_even_while_func(list1)
list_even_for_func(list1)

******************************************************************************

t1 = (1,"Hello",True)
t2 = ()
t3 = tuple()
print(f"t1的类型是:{type(t1)},内容是:{t1}")
print(f"t2的类型是:{type(t2)},内容是:{t2}")
print(f"t3的类型是:{type(t3)},内容是:{t3}")

------------------------------------------

#注意要点:
#定义一个元素的元组
t1 = ("Hello",) #注意:必须带有逗号,否则不是元组类型
t2 = ("Hello")
print(f"t1的类型是{type(t1)}")
print(f"t2的类型是{type(t2)}")


------------------------------------------

t1 = ((1,2,3),(4,5,6))
print(f"t1的类型是:{type(t1)},内容是:{t1}")

------------------------------------------

t1 = ((1,2,3),(4,5,6))
num = t1[1][-1]
print(num)

------------------------------------------

t1 = ("ab","cd","ef","gh")
index = t1.index("ef")
print(f"在元组t1中查找\'ef\'的下标是:{index}")

------------------------------------------

t1 = ("a","b","a","b","g")
count = t1.count("a")
print(f"在元组t1中统计\'a\'的数量有:{count}个")

------------------------------------------

t1 = ("a","b","a","b","g")
num = len(t1)
print(f"t1元组中的元素有:{num}个")


------------------------------------------

def tuple_while_func (t):
    i = 0
    print("while遍历_元组的元素有:",end = '')
    while i < len(t):
        print(t[i],end = ' ')
        i += 1
    print()


def tuple_for_func (t):
    print("for遍历_元组的元素有:",end = '')
    for i in t:
        print(i,end = ' ')
    print()

t1 = ("a","b","c","d","e","f")
tuple_while_func(t1)
tuple_for_func(t1)

------------------------------------------

t1 = ("a","b",["h","e"])
print(f"t1的内容是:{t1}")
t1[2][0] = "y"
t1[2][1] = "z"
print(f"t1的内容是:{t1}")

******************************************************************************
s1 = "hello world"
c1 = s1[1]
c2 = s1[-3]
print(f"从字符串{s1}取下标为1的元素,值为:{c1}\n\
从字符串{s1}取下标为-3的元素,值为:{c2}")

------------------------------------------

s1 = "abc and def"
value = s1.index("and")
print(f"在字符串{s1}中查找\'and\',其起始下标是:{value}")

------------------------------------------



------------------------------------------
------------------------------------------
------------------------------------------
------------------------------------------
------------------------------------------
------------------------------------------
------------------------------------------
------------------------------------------
------------------------------------------
------------------------------------------
------------------------------------------
------------------------------------------
------------------------------------------
------------------------------------------
------------------------------------------
******************************************************************************
******************************************************************************
******************************************************************************
------------------------------------------
------------------------------------------
------------------------------------------
------------------------------------------
------------------------------------------











